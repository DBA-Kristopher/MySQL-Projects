create database DBM449Lab6;
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';


USE `DBM449Lab6` ;

-- -----------------------------------------------------
-- Table `DBM449Lab6`.`DISTRICT`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DBM449Lab6`.`DISTRICT` ;

CREATE TABLE IF NOT EXISTS `DBM449Lab6`.`DISTRICT` (
  `DIST_ID` INT(11) NOT NULL,
  `DIST_NAME` VARCHAR(10) NULL DEFAULT NULL,
  PRIMARY KEY (`DIST_ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DBM449Lab6`.`CUSTOMER`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DBM449Lab6`.`CUSTOMER` ;

CREATE TABLE IF NOT EXISTS `DBM449Lab6`.`CUSTOMER` (
  `CUST_CODE` DECIMAL(10,0) NOT NULL,
  `CUST_LNAME` VARCHAR(15) NULL DEFAULT NULL,
  `CUST_FNAME` VARCHAR(15) NULL DEFAULT NULL,
  `CUST_INITIAL` CHAR(1) NULL DEFAULT NULL,
  `CUST_STATE` CHAR(2) NULL DEFAULT NULL,
  `DIST_ID` INT(11) NOT NULL,
  PRIMARY KEY (`CUST_CODE`),
  CONSTRAINT `fk_CUSTOMER_DISTRICT1`
    FOREIGN KEY (`DIST_ID`)
    REFERENCES `DBM449Lab6`.`DISTRICT` (`DIST_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_CUSTOMER_DISTRICT1_idx` ON `DBM449Lab6`.`CUSTOMER` (`DIST_ID` ASC);


-- -----------------------------------------------------
-- Table `DBM449Lab6`.`SUPPLIER`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DBM449Lab6`.`SUPPLIER` ;

CREATE TABLE IF NOT EXISTS `DBM449Lab6`.`SUPPLIER` (
  `SUP_CODE` INT(11) NOT NULL,
  `SUP_NAME` VARCHAR(35) NULL DEFAULT NULL,
  `SUP_AREACODE` CHAR(3) NULL DEFAULT NULL,
  `SUP_STATE` CHAR(2) NULL DEFAULT NULL,
  PRIMARY KEY (`SUP_CODE`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `DBM449Lab6`.`PRODUCT`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DBM449Lab6`.`PRODUCT` ;

CREATE TABLE IF NOT EXISTS `DBM449Lab6`.`PRODUCT` (
  `PROD_CODE` VARCHAR(10) NOT NULL,
  `PROD_DESCRIPT` VARCHAR(35) NULL DEFAULT NULL,
  `PROD_CATEGORY` VARCHAR(5) NULL DEFAULT NULL,
  `SUP_CODE` INT(11) NOT NULL,
  PRIMARY KEY (`PROD_CODE`),
  CONSTRAINT `fk_PRODUCT_SUPPLIER`
    FOREIGN KEY (`SUP_CODE`)
    REFERENCES `DBM449Lab6`.`SUPPLIER` (`SUP_CODE`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_PRODUCT_SUPPLIER_idx` ON `DBM449Lab6`.`PRODUCT` (`SUP_CODE` ASC);


-- -----------------------------------------------------
-- Table `DBM449Lab6`.`SALES`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DBM449Lab6`.`SALES` ;

CREATE TABLE IF NOT EXISTS `DBM449Lab6`.`SALES` (
  `TIME_ID` DECIMAL(10,0) NOT NULL DEFAULT '0',
  `CUST_CODE` DECIMAL(10,0) NOT NULL DEFAULT '0',
  `PROD_CODE` VARCHAR(10) NOT NULL DEFAULT '',
  `SALE_UNITS` DECIMAL(10,0) NULL DEFAULT NULL,
  `SALE_PRICE` DECIMAL(10,2) NULL DEFAULT NULL,
  PRIMARY KEY (`TIME_ID`, `CUST_CODE`, `PROD_CODE`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DBM449Lab6`.`TIME`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DBM449Lab6`.`TIME` ;

CREATE TABLE IF NOT EXISTS `DBM449Lab6`.`TIME` (
  `TIME_ID` INT(11) NOT NULL,
  `TIME_YEAR` INT(11) NULL DEFAULT NULL,
  `TIME_MONTH` INT(11) NULL DEFAULT NULL,
  `TIME_DAY` INT(11) NULL DEFAULT NULL,
  `TIME_QTR` INT(11) NULL DEFAULT NULL,
  PRIMARY KEY (`TIME_ID`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


INSERT INTO SUPPLIER VALUES(31225,'Bryson, Inc.'    ,'615','TN');
INSERT INTO SUPPLIER VALUES(31226,'SuperLoo, Inc.'  ,'904','FL');
INSERT INTO SUPPLIER VALUES(31231,'DE Supply'     ,'615','TN');
INSERT INTO SUPPLIER VALUES(31344,'Gomez Bros.'     ,'615','KY');
INSERT INTO SUPPLIER VALUES(32567,'Dome Supply'     ,'901','GA');
INSERT INTO SUPPLIER VALUES(33119,'Randsets Ltd.'   ,'901','GA');
INSERT INTO SUPPLIER VALUES(44004,'Brackman Bros.'  ,'615','TN');
INSERT INTO SUPPLIER VALUES(44288,'ORDVA, Inc.'     ,'615','TN');
INSERT INTO SUPPLIER VALUES(55443,'BK, Inc.'      ,'904','FL');
INSERT INTO SUPPLIER VALUES(55501,'Damal Supplies'  ,'615','TN');
INSERT INTO SUPPLIER VALUES(55595,'Rubicon Systems' ,'904','FL');

INSERT INTO PRODUCT VALUES('11QER/31','Power painter, 15 psi., 3-nozzle'     ,'CAT1',55595);
INSERT INTO PRODUCT VALUES('13-Q2/P2','7.25-in. pwr. saw blade'              ,'CAT1',31344);
INSERT INTO PRODUCT VALUES('14-Q1/L3','9.00-in. pwr. saw blade'              ,'CAT1',31344);
INSERT INTO PRODUCT VALUES('1546-QQ2','Hrd. cloth, 1/4-in., 2x50'            ,'CAT2',33119);
INSERT INTO PRODUCT VALUES('1558-QW1','Hrd. cloth, 1/2-in., 3x50'            ,'CAT2',33119);
INSERT INTO PRODUCT VALUES('2232/QTY','BD jigsaw, 12-in. blade'            ,'CAT2',44288);
INSERT INTO PRODUCT VALUES('2232/QWE','BD jigsaw, 8-in. blade'             ,'CAT3',44288);
INSERT INTO PRODUCT VALUES('2238/QPD','BD cordless drill, 1/2-in.'         ,'CAT3',55595);
INSERT INTO PRODUCT VALUES('23109-HB','Claw hammer'                          ,'CAT4',31225);
INSERT INTO PRODUCT VALUES('23114-AA','Sledge hammer, 12 lb.'                ,'CAT4',31225);
INSERT INTO PRODUCT VALUES('54778-2T','Rat-tail file, 1/8-in. fine'          ,'CAT1',31344);
INSERT INTO PRODUCT VALUES('89-WRE-Q','Hicut chain saw, 16 in.'              ,'CAT2',44288);
INSERT INTO PRODUCT VALUES('PVC23DRT','PVC pipe, 3.5-in., 8-ft'              ,'CAT3',31225);
INSERT INTO PRODUCT VALUES('SM-18277','1.25-in. metal screw, 25'             ,'CAT4',31225);
INSERT INTO PRODUCT VALUES('SW-23116','2.5-in. wd. screw, 50'                ,'CAT2',31231);
INSERT INTO PRODUCT VALUES('WR3/TT3' ,'Steel matting, 4''x8''x1/6", .5" mesh','CAT3',55595);

INSERT INTO DISTRICT VALUES(1,'NE');
INSERT INTO DISTRICT VALUES(2,'NW');
INSERT INTO DISTRICT VALUES(3,'SE');
INSERT INTO DISTRICT VALUES(4,'SW');

INSERT INTO CUSTOMER VALUES(110010,'Ramas'   ,'Alfred','A' ,'TN',3);
INSERT INTO CUSTOMER VALUES(110011,'Dunne'   ,'Leona' ,'K' ,'GA',3);
INSERT INTO CUSTOMER VALUES(110012,'Smith'   ,'Kathy' ,'W' ,'NY',1);
INSERT INTO CUSTOMER VALUES(110013,'Olowski' ,'Paul'  ,'F' ,'NJ',1);
INSERT INTO CUSTOMER VALUES(110014,'Orlando' ,'Myron' ,NULL,'CO',2);
INSERT INTO CUSTOMER VALUES(110015,'O''Brian','Amy'   ,'B' ,'TN',3);
INSERT INTO CUSTOMER VALUES(110016,'Brown'   ,'James' ,'G' ,'GA',3);
INSERT INTO CUSTOMER VALUES(110017,'Williams','George',NULL,'CA',4);
INSERT INTO CUSTOMER VALUES(110018,'Farriss' ,'Anne'  ,'G' ,'CA',4);
INSERT INTO CUSTOMER VALUES(110019,'Smith'   ,'Olette','K' ,'CO',2);

INSERT INTO TIME VALUES(201,2009,09,29,3);
INSERT INTO TIME VALUES(202,2009,09,30,3);
INSERT INTO TIME VALUES(203,2009,09,31,3);
INSERT INTO TIME VALUES(206,2009,10,03,4);
INSERT INTO TIME VALUES(207,2009,10,04,4);

INSERT INTO SALES VALUES(201,110014,'13-Q2/P2',1,14.99);
INSERT INTO SALES VALUES(201,110014,'23109-HB',1,11.95);
INSERT INTO SALES VALUES(201,110015,'54778-2T',2,5.99);
INSERT INTO SALES VALUES(201,110015,'2238/QPD',1,38.95);
INSERT INTO SALES VALUES(202,110016,'1546-QQ2',1,311.95);
INSERT INTO SALES VALUES(202,110016,'13-Q2/P2',5,15.99);
INSERT INTO SALES VALUES(202,110017,'54778-2T',3,5.99);
INSERT INTO SALES VALUES(202,110017,'23109-HB',2,11.95);
INSERT INTO SALES VALUES(202,110018,'PVC23DRT',12,5.87);
INSERT INTO SALES VALUES(203,110012,'SM-18277',3,8.95);
INSERT INTO SALES VALUES(203,110014,'2232/QTY',1,109.92);
INSERT INTO SALES VALUES(203,110015,'23109-HB',1,11.95);
INSERT INTO SALES VALUES(203,110015,'89-WRE-Q',1,258.95);
INSERT INTO SALES VALUES(203,110016,'13-Q2/P2',2,15.99);
INSERT INTO SALES VALUES(203,110016,'54778-2T',1,5.99);
INSERT INTO SALES VALUES(203,110016,'PVC23DRT',5,5.87);
INSERT INTO SALES VALUES(203,110017,'WR3/TT3',3,111.95);
INSERT INTO SALES VALUES(203,110017,'23109-HB',1,11.95);
INSERT INTO SALES VALUES(203,110017,'13-Q2/P2',1,15.99);
INSERT INTO SALES VALUES(203,110018,'23109-HB',1,11.95);
INSERT INTO SALES VALUES(203,110018,'54778-2T',2,5.99);
INSERT INTO SALES VALUES(203,110018,'2238/QPD',1,38.95);
INSERT INTO SALES VALUES(203,110019,'1546-QQ2',1,311.95);
INSERT INTO SALES VALUES(206,110010,'13-Q2/P2',5,15.99);
INSERT INTO SALES VALUES(206,110010,'54778-2T',3,5.99);
INSERT INTO SALES VALUES(206,110010,'23109-HB',2,11.95);
INSERT INTO SALES VALUES(206,110010,'PVC23DRT',12,5.87);
INSERT INTO SALES VALUES(206,110011,'SM-18277',3,8.95);
INSERT INTO SALES VALUES(206,110011,'2232/QTY',1,109.92);
INSERT INTO SALES VALUES(206,110012,'23109-HB',1,11.95);
INSERT INTO SALES VALUES(206,110012,'89-WRE-Q',1,258.95);
INSERT INTO SALES VALUES(207,110013,'13-Q2/P2',2,15.99);
INSERT INTO SALES VALUES(207,110013,'54778-2T',1,5.99);
INSERT INTO SALES VALUES(207,110013,'PVC23DRT',5,5.87);
INSERT INTO SALES VALUES(207,110014,'WR3/TT3',3,111.95);
INSERT INTO SALES VALUES(207,110015,'23109-HB',1,11.95);

 Show tables;
select * from sales;
select * from supplier;
select * from customer;
select * from product;
select * from district;
select * from time;

select  SUP_CODE as Supplier_code,PROD_CODE as Product,sale_price, SALE_PRICE * SALE_UNITS as Total_Sales 
from sales
join product
using(PROD_CODE)
group by prod_code with rollup;

select time_month as month, prod_code as product, SALE_PRICE * SALE_UNITS as Total_Sales
from sales
join product 
using(prod_code)
join time
using(time_id)
group by time_id;

SELECT TIME_YEAR AS "YEAR", TIME_MONTH AS "MONTH", PROD_CODE AS "PRODUCT",
    SUM(SALE_UNITS) AS "UNITS SOLD", SUM(SALE_UNITS*SALE_PRICE) AS "SALES TOTAL"
    FROM TIME T, SALES S
    WHERE S.TIME_ID = T.TIME_ID
    GROUP BY TIME_YEAR, TIME_MONTH, PROD_CODE;


DELIMITER $$
Create Procedure REFRESH_MV_SALESBYMONTH()
BEGIN
drop table IF exists MV_SALESBYMONTH;
create table `MV_SALESBYMONTH`( year int(4),month int(11), 
product varchar(10) ,unit_sold decimal(10,0), 
sales_total decimal(10,2));
Insert into MV_SALESBYMONTH 
SELECT TIME_YEAR AS MV_YEAR, TIME_MONTH AS MV_MONTH, PROD_CODE AS MV_PRODUCT,
    SUM(SALE_UNITS) AS MV_UNITSSOLD, 
    SUM(SALE_UNITS*SALE_PRICE) AS MV_SALESTOTAL
    FROM TIME T, SALES S
    WHERE S.TIME_ID = T.TIME_ID
    GROUP BY TIME_YEAR, TIME_MONTH, PROD_CODE;

END
;
DELIMITER $$
CALL REFRESH_MV_SALESBYMONTH();

SELECT * FROM MV_SALESBYMONTH;
DELIMITER $$
insert into  SALES Values(207, 110016, 'SM-18277',1,8.95);

$$

CREATE TRIGGER ins_sum after INSERT ON sales
for each row
CALL REFRESH_MV_SALESBYMONTH();





